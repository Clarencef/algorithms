{"version":3,"sources":["webpack:///algorithms.js","webpack:///webpack/bootstrap af79045e96d8186a1a21","webpack:///./src/index.js","webpack:///./src/fizzbuzz.js","webpack:///./src/harmlessRansomNote.js","webpack:///./src/isPalindrome.js","webpack:///./src/caesarCipher.js","webpack:///./src/reverseWord.js","webpack:///./src/reversedArrayInPlace.js","webpack:///./src/meanMedianMode.js","webpack:///./src/twosum.js","webpack:///./src/binarySearchTree.js","webpack:///./src/binarySearch.js","webpack:///./src/fibonacci.js","webpack:///./src/factorial.js","webpack:///./src/largestBinaryGap.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_fizzbuzz","_harmlessRansomNote","_isPalindrome","_isPalindrome2","_caesarCipher","_caesarCipher2","_reverseWord2","_reverseWord3","_reversedArrayInPlace","_reversedArrayInPlace2","_meanMedianMode","_meanMedianMode2","_twosum","_twosum2","_binarySearchTree","_binarySearchTree2","_binarySearch","_binarySearch2","_fibonacci","_factorial","_factorial2","_largestBinaryGap","_largestBinaryGap2","est","BinarySearchTree","add","console","log","size","contains","myconsole","remove","toArray","toString","window","onload","fizzBuzzAnswer","document","getElementsByClassName","harmlessRansomNoteAnswer","ispalindromeBlock","getElementById","caesarCipherBlock","reversedWordBlock","reversedArrayInPlaceBlock","meanMedianModeBlock","twoSumBlock","binarysearchBlock","largestBinaryGapBlock","meanMedianModeArr","twoSumArr","binarySearchArr","binarySearchKey","twoSumExpect","twoSumResult","map","item","join","meanMedianModeObj","_reverseWord","origin","reversed","caesarCipherArr","innerHTML","fizzbuzzAnswer","ransomNoteAnswer","Mean","Median","Mode","fibonacci","fibMemo","fizzbuzz","num","warn","infoArr","i","push","infoString","Object","defineProperty","value","harmlessRansomNote","noteTxt","magazineTxt","compareObj","noteTxtArr","split","MagazineTxtArr","noteIsPossible","forEach","text","isPalindrome","str","lowerCaseStr","toLowerCase","validateStr","replace","reverseStr","reverse","caesarCipher","lowerCaseString","alphabet","newString","length","currentText","currentIndex","modifiedIndex","test","indexOf","toUpperCase","reverseWord","strArr","reversedStrArr","word","unshift","reversedArrayInPlace","arr","temp","getMean","sum","reduce","prev","next","getMedian","orderArr","sort","a","b","medainIndex","Math","floor","mid1","mid2","getMode","ModeObj","maxFrequency","modes","keys","meanMedianMode","twoSum","pairs","hashtable","currentNum","counterpart","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","this","_root","process","inOrder","node","left","right","current","found","parent","childCount","replacementParent","replacement","traverse","result","binarySearch","sortArr","sortArrLen","middleIndex","middleElem","newArr","splice","position","index","cache","arguments","undefined","factorial","n","largestBinaryGap","currentMax","bin","abs","finalMax","max"],"mappings":"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","file":"algorithms.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _fizzbuzz = __webpack_require__(1);\n\t\n\tvar _harmlessRansomNote = __webpack_require__(2);\n\t\n\tvar _isPalindrome = __webpack_require__(3);\n\t\n\tvar _isPalindrome2 = _interopRequireDefault(_isPalindrome);\n\t\n\tvar _caesarCipher = __webpack_require__(4);\n\t\n\tvar _caesarCipher2 = _interopRequireDefault(_caesarCipher);\n\t\n\tvar _reverseWord2 = __webpack_require__(5);\n\t\n\tvar _reverseWord3 = _interopRequireDefault(_reverseWord2);\n\t\n\tvar _reversedArrayInPlace = __webpack_require__(6);\n\t\n\tvar _reversedArrayInPlace2 = _interopRequireDefault(_reversedArrayInPlace);\n\t\n\tvar _meanMedianMode = __webpack_require__(7);\n\t\n\tvar _meanMedianMode2 = _interopRequireDefault(_meanMedianMode);\n\t\n\tvar _twosum = __webpack_require__(8);\n\t\n\tvar _twosum2 = _interopRequireDefault(_twosum);\n\t\n\tvar _binarySearchTree = __webpack_require__(9);\n\t\n\tvar _binarySearchTree2 = _interopRequireDefault(_binarySearchTree);\n\t\n\tvar _binarySearch = __webpack_require__(10);\n\t\n\tvar _binarySearch2 = _interopRequireDefault(_binarySearch);\n\t\n\tvar _fibonacci = __webpack_require__(11);\n\t\n\tvar _factorial = __webpack_require__(12);\n\t\n\tvar _factorial2 = _interopRequireDefault(_factorial);\n\t\n\tvar _largestBinaryGap = __webpack_require__(13);\n\t\n\tvar _largestBinaryGap2 = _interopRequireDefault(_largestBinaryGap);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar est = new _binarySearchTree2.default();\n\t\n\test.add(55);\n\test.add(67);\n\test.add(10);\n\test.add(29);\n\test.add(40);\n\test.add(5);\n\test.add(16);\n\test.add(25);\n\test.add(2);\n\test.add(1);\n\test.add(3);\n\tconsole.log(est.size());\n\tconsole.log(est.contains(10));\n\test.myconsole();\n\test.remove(16);\n\tconsole.log(est.toArray());\n\tconsole.log(est.toArray().toString());\n\t\n\twindow.onload = function () {\n\t  var fizzBuzzAnswer = document.getElementsByClassName('fizzBuzz-answer')[0];\n\t  var harmlessRansomNoteAnswer = document.getElementsByClassName('randomNote-answer')[0];\n\t  var ispalindromeBlock = document.getElementById('ispalindrome');\n\t  var caesarCipherBlock = document.getElementById('caesarCipher');\n\t  var reversedWordBlock = document.getElementById('reversedWord');\n\t  var reversedArrayInPlaceBlock = document.getElementById('reversedArrayInPlace');\n\t  var meanMedianModeBlock = document.getElementById('meanMedianMode');\n\t  var twoSumBlock = document.getElementById('twoSum');\n\t  var binarysearchBlock = document.getElementById('binarysearch');\n\t  var largestBinaryGapBlock = document.getElementById('largestBinaryGap');\n\t  var meanMedianModeArr = [32, 4, 2, 5, 44, 55, 55, 4, 1, 46];\n\t  var twoSumArr = [40, 11, 19, 17, -12];\n\t  var binarySearchArr = [1, 3, 5, 7, 9, 11, 45, 55, 65, 77, 89];\n\t  var binarySearchKey = 77;\n\t  var twoSumExpect = 28;\n\t  var twoSumResult = (0, _twosum2.default)(twoSumArr, twoSumExpect).map(function (item) {\n\t    return '[' + item.join(', ') + ']';\n\t  });\n\t  var meanMedianModeObj = (0, _meanMedianMode2.default)(meanMedianModeArr);\n\t\n\t  var _reverseWord = (0, _reverseWord3.default)('this is test text for function'),\n\t      origin = _reverseWord.origin,\n\t      reversed = _reverseWord.reversed;\n\t\n\t  var caesarCipherArr = [(0, _caesarCipher2.default)('Zoo Keeper', 2), (0, _caesarCipher2.default)('Big Car', -16), (0, _caesarCipher2.default)('Javascript', -900)];\n\t\n\t  fizzBuzzAnswer.innerHTML = _fizzbuzz.fizzbuzzAnswer;\n\t  harmlessRansomNoteAnswer.innerHTML = _harmlessRansomNote.ransomNoteAnswer;\n\t  ispalindromeBlock.innerHTML = '<h2>IsPalindrome</h2>' + (0, _isPalindrome2.default)(\"Madam I'm Adam\");\n\t  caesarCipherBlock.innerHTML = '<h2>CaesarCipher</h2>' + caesarCipherArr.join('<br>');\n\t  reversedWordBlock.innerHTML = '<h2>Reverse Word</h2>' + origin + ':<br>' + reversed;\n\t  reversedArrayInPlaceBlock.innerHTML = '<h2>Reversed Array Place</h2>' + (0, _reversedArrayInPlace2.default)(['r', 4, 'a', true]).join(', ');\n\t  meanMedianModeBlock.innerHTML = '<h2>mean median and mode</h2>' + 'Array: [' + meanMedianModeArr.join(', ') + '] <br/>' + 'Mean: ' + meanMedianModeObj.Mean + '<br/>' + 'Median: ' + meanMedianModeObj.Median + '<br/>' + 'Mode: ' + meanMedianModeObj.Mode.join(', ');\n\t  twoSumBlock.innerHTML = '<h2>two sum</h2>' + 'Array: [' + twoSumArr.join(', ') + '] Expect sum:' + twoSumExpect + '<br/>' + 'result: [' + twoSumResult.join(', ') + ']';\n\t  twoSumBlock.innerHTML = '<h2>two sum</h2>' + 'Array: [' + twoSumArr.join(', ') + '] Expect sum:' + twoSumExpect + '<br/>' + 'result: [' + twoSumResult.join(', ') + ']';\n\t  binarysearchBlock.innerHTML = '<h2>binary search</h2>' + 'Array: [' + binarySearchArr.join(', ') + '] <br/>' + 'result: ' + (0, _binarySearch2.default)(binarySearchArr, binarySearchKey);\n\t  largestBinaryGapBlock.innerHTML = '<h2>largestBinaryGap</h2>' + 'num: 1028 <br/>' + 'result: ' + (0, _largestBinaryGap2.default)(1028);\n\t  console.log((0, _fibonacci.fibonacci)(12));\n\t  console.log((0, _fibonacci.fibMemo)(8));\n\t  console.log((0, _factorial2.default)(10));\n\t};\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = fizzbuzz;\n\tfunction fizzbuzz(num) {\n\t  if (!num) return console.warn('請輸入一個數字');\n\t  var infoArr = [];\n\t\n\t  for (var i = 1; i <= num; i++) {\n\t    if (i % 15 === 0) infoArr.push(i + ' - FizBuzz');else if (i % 3 === 0) infoArr.push(i + ' - Fizz');else if (i % 5 === 0) infoArr.push(i + ' - Buzz');else infoArr.push('' + i);\n\t  }\n\t  var infoString = infoArr.join('<br>');\n\t\n\t  return infoString;\n\t};\n\t\n\tvar fizzbuzzAnswer = exports.fizzbuzzAnswer = fizzbuzz(20) || '請輸入一個數字';\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = harmlessRansomNote;\n\tfunction harmlessRansomNote(noteTxt, magazineTxt) {\n\t  var compareObj = {};\n\t  var noteTxtArr = noteTxt.split(' ');\n\t  var MagazineTxtArr = magazineTxt.split(' ');\n\t  var noteIsPossible = true;\n\t\n\t  MagazineTxtArr.forEach(function (text) {\n\t    if (!compareObj[text]) compareObj[text] = 0;\n\t    compareObj[text]++;\n\t  });\n\t\n\t  noteTxtArr.forEach(function (text) {\n\t    if (compareObj[text]) {\n\t      compareObj[text]--;\n\t      if (compareObj[text] < 0) noteIsPossible = false;\n\t    } else noteIsPossible = false;\n\t  });\n\t  return noteIsPossible;\n\t};\n\t\n\tvar ransomNoteAnswer = exports.ransomNoteAnswer = harmlessRansomNote('this is this', 'this is the text of the note');\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = isPalindrome;\n\tfunction isPalindrome(str) {\n\t  var lowerCaseStr = str.toLowerCase();\n\t  var validateStr = lowerCaseStr.replace(/[\\W_]+/g, '');\n\t  var reverseStr = validateStr.split('').reverse().join('');\n\t\n\t  return validateStr === reverseStr;\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = caesarCipher;\n\tfunction caesarCipher(str, num) {\n\t  num = num % 26;\n\t  var lowerCaseString = str.toLowerCase();\n\t  var alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('');\n\t  var newString = '';\n\t\n\t  for (var i = 0; i < lowerCaseString.length; i++) {\n\t    var currentText = lowerCaseString[i];\n\t    var currentIndex = void 0,\n\t        modifiedIndex = void 0;\n\t\n\t    if (/[\\W]/.test(currentText)) {\n\t      newString += currentText;\n\t      continue;\n\t    }\n\t    currentIndex = alphabet.indexOf(currentText);\n\t    modifiedIndex = currentIndex + num;\n\t    if (modifiedIndex > 25) modifiedIndex = modifiedIndex - 26;\n\t    if (modifiedIndex < 0) modifiedIndex = 26 + modifiedIndex;\n\t    if (str[i] === currentText.toUpperCase()) {\n\t      newString += alphabet[modifiedIndex].toUpperCase();\n\t    } else {\n\t      newString += alphabet[modifiedIndex];\n\t    }\n\t  }\n\t\n\t  return newString;\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = reverseWord;\n\tfunction reverseWord(str) {\n\t  var strArr = str.split('');\n\t  var reversedStrArr = [];\n\t\n\t  strArr.forEach(function (word) {\n\t    reversedStrArr.unshift(word);\n\t  });\n\t\n\t  return {\n\t    origin: str,\n\t    reversed: reversedStrArr.join('')\n\t  };\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = reversedArrayInPlace;\n\tfunction reversedArrayInPlace(arr) {\n\t  for (var i = 0; i < arr.length / 2; i++) {\n\t    var temp = arr[i];\n\t\n\t    arr[i] = arr[arr.length - 1 - i];\n\t    arr[arr.length - 1 - i] = temp;\n\t  }\n\t  return arr;\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = meanMedianMode;\n\tfunction getMean(arr) {\n\t  var sum = arr.reduce(function (prev, next) {\n\t    return prev + next;\n\t  }, 0);\n\t\n\t  return sum / arr.length;\n\t}\n\t\n\tfunction getMedian(arr) {\n\t  var orderArr = arr.sort(function (a, b) {\n\t    return a - b;\n\t  });\n\t\n\t  if (arr.length % 2 !== 0) {\n\t    var medainIndex = Math.floor(orderArr.length / 2);\n\t\n\t    return orderArr[medainIndex];\n\t  } else {\n\t    var mid1 = orderArr[orderArr.length / 2 - 1];\n\t    var mid2 = orderArr[orderArr.length / 2];\n\t\n\t    return (mid1 + mid2) / 2;\n\t  }\n\t}\n\t\n\tfunction getMode(arr) {\n\t  var ModeObj = {};\n\t  var maxFrequency = 0;\n\t  var modes = [];\n\t\n\t  arr.forEach(function (item) {\n\t    if (!ModeObj[item]) ModeObj[item] = 0;\n\t    ModeObj[item]++;\n\t  });\n\t\n\t  for (var num in ModeObj) {\n\t    if (ModeObj[num] > maxFrequency) {\n\t      modes = [num];\n\t      maxFrequency = ModeObj[num];\n\t    } else if (ModeObj[num] === maxFrequency) modes.push(num);\n\t    if (modes.length === Object.keys(ModeObj).length) modes = [];\n\t  }\n\t\n\t  return modes;\n\t};\n\t\n\tfunction meanMedianMode(arr) {\n\t  return {\n\t    Mean: getMean(arr),\n\t    Median: getMedian(arr),\n\t    Mode: getMode(arr)\n\t  };\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = twoSum;\n\tfunction twoSum(arr, sum) {\n\t  var pairs = [];\n\t  var hashtable = [];\n\t\n\t  for (var i = 0; i < arr.length; i++) {\n\t    var currentNum = arr[i];\n\t    var counterpart = sum - currentNum;\n\t\n\t    if (hashtable.indexOf(counterpart) !== -1) pairs.push([currentNum, counterpart]);\n\t    hashtable.push(currentNum);\n\t  }\n\t\n\t  return pairs;\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar BinarySearchTree = function () {\n\t  function BinarySearchTree() {\n\t    _classCallCheck(this, BinarySearchTree);\n\t\n\t    this._root = null;\n\t  }\n\t  // 先序遍歷：遍歷順序是：根、左子樹、右子樹。\n\t  // 傳入的process 是一個必須節點內執行的function\n\t\n\t\n\t  _createClass(BinarySearchTree, [{\n\t    key: \"traverse\",\n\t    value: function traverse(process) {\n\t      // 用來recursive traverse每個節點的 helper function\n\t      function inOrder(node) {\n\t        if (node) {\n\t          if (node.left !== null) {\n\t            inOrder(node.left);\n\t          }\n\t\n\t          process.call(this, node);\n\t\n\t          if (node.right !== null) {\n\t            inOrder(node.right);\n\t          }\n\t        }\n\t      }\n\t\n\t      inOrder(this._root);\n\t    }\n\t  }, {\n\t    key: \"add\",\n\t    value: function add(value) {\n\t      // 創造新的節點\n\t      var node = {\n\t        value: value,\n\t        left: null,\n\t        right: null\n\t      },\n\t\n\t      // 用來作為遍歷節點的當前節點\n\t      current = void 0;\n\t\n\t      if (this._root === null) {\n\t        this._root = node;\n\t      } else {\n\t        current = this._root;\n\t        while (true) {\n\t          // 如果傳入的value小於當前節點的值，往當前節點的左邊節點尋找\n\t          if (value < current.value) {\n\t            if (current.left === null) {\n\t              // 設定node為當前節點的左節點，並離開loop\n\t              current.left = node;\n\t              break;\n\t            } else {\n\t              // 設定當前節點的左節點為當前節點，並繼續進行loop\n\t              current = current.left;\n\t            }\n\t          } else if (value > current.value) {\n\t            // 如果傳入的value小於當前節點的值，往當前節點的左邊節點尋找\n\t            if (current.right === null) {\n\t              current.right = node;\n\t              break;\n\t            } else {\n\t              current = current.right;\n\t            }\n\t          } else {\n\t            // value = 當前節點的值，不增加節點並跳出loop\n\t            break;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: \"remove\",\n\t    value: function remove(value) {\n\t      var found = false,\n\t          parent = null,\n\t          current = this._root,\n\t          childCount = void 0,\n\t          replacementParent = void 0,\n\t          replacement = void 0;\n\t\n\t      while (!found && current) {\n\t\n\t        if (value < current.value) {\n\t          parent = current;\n\t          current = current.left;\n\t        } else if (value > current.value) {\n\t          parent = current;\n\t          current = current.right;\n\t        } else {\n\t          found = true;\n\t        }\n\t      }\n\t\n\t      if (found) {\n\t        childCount = (current.left !== null ? 1 : 0) + (current.right !== null ? 1 : 0);\n\t        if (current === this._root) {\n\t          switch (childCount) {\n\t            case 0:\n\t              this._root = null;\n\t              break;\n\t            case 1:\n\t              this._root = current.right === null ? current.left : current.right;\n\t              break;\n\t            case 2:\n\t              replacement = this._root.left;\n\t              // 選出左分支最大的值\n\t              while (replacement.right !== null) {\n\t                replacementParent = replacement;\n\t                replacement = replacement.right;\n\t              }\n\t\n\t              if (replacementParent !== null) {\n\t\n\t                // 將左分支最大的值從原來的位置移除\n\t                replacementParent.right = replacement.left;\n\t\n\t                // 將左分支最大的值作為root node，\n\t                // 原root node的左右子節點設為新root node 左右子節\n\t                replacement.right = this._root.right;\n\t                replacement.left = this._root.left;\n\t              } else {\n\t                // 左分支因this._root.left沒有子節點而消失\n\t                replacement.right = this._root.right;\n\t              }\n\t\n\t              // 將replacement設為新root node\n\t              this._root = replacement;\n\t              break;\n\t            default:\n\t              break;\n\t          }\n\t        } else {\n\t          switch (childCount) {\n\t            case 0:\n\t              if (current.value < parent.value) {\n\t                parent.left = null;\n\t              } else {\n\t                parent.right = null;\n\t              };\n\t              break;\n\t            case 1:\n\t              if (current.value < parent.value) {\n\t                parent.left = current.left === null ? current.right : current.left;\n\t              } else {\n\t                parent.right = current.left === null ? current.right : current.left;\n\t              };\n\t              break;\n\t            case 2:\n\t              // 將current左子節點設為取代節點，current = replacementParent\n\t              replacement = current.left;\n\t              replacementParent = current;\n\t\n\t              // 選出左分支最大的值\n\t              while (replacement.right !== null) {\n\t                replacementParent = replacement;\n\t                replacement = replacement.right;\n\t              }\n\t\n\t              replacementParent.right = replacement.left;\n\t\n\t              replacement.right = current.right;\n\t              replacement.left = current.left;\n\t\n\t              if (current.value < parent.value) {\n\t                parent.left = replacement;\n\t              } else {\n\t                parent.right = replacement;\n\t              }\n\t              break;\n\t            default:\n\t              break;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    // 給定一個value 若 這個value出現在二元樹中 return true，反之 return false\n\t\n\t  }, {\n\t    key: \"contains\",\n\t    value: function contains(value) {\n\t      var found = false,\n\t          current = this._root; // 每次while loop實都會被變更為當前node\n\t\n\t      // 當found不等於true，並有還有剩餘節點時繼續執行loop\n\t      while (!found && current) {\n\t\n\t        // 如果輸入值小於當前node的值，往當前node的left node尋找該值\n\t        if (value < current.value) {\n\t          current = current.left;\n\t          // 如果輸入值大於當前node的值，往當前node的right node尋找該值\n\t        } else if (value > current.value) {\n\t          current = current.right;\n\t          // 輸入值等於當前node的值，set found = true找到該節點\n\t        } else {\n\t          found = true;\n\t        }\n\t      }\n\t\n\t      return found;\n\t    }\n\t  }, {\n\t    key: \"size\",\n\t    value: function size() {\n\t      var length = 0;\n\t\n\t      this.traverse(function (node) {\n\t        length++;\n\t      });\n\t\n\t      return length;\n\t    }\n\t  }, {\n\t    key: \"toArray\",\n\t    value: function toArray() {\n\t      var result = [];\n\t\n\t      this.traverse(function (node) {\n\t        result.push(node.value);\n\t      });\n\t\n\t      return result;\n\t    }\n\t  }, {\n\t    key: \"toString\",\n\t    value: function toString() {\n\t      return this.toArray.toString();\n\t    }\n\t  }, {\n\t    key: \"myconsole\",\n\t    value: function myconsole() {\n\t      console.log(this._root);\n\t    }\n\t  }]);\n\t\n\t  return BinarySearchTree;\n\t}();\n\t\n\texports.default = BinarySearchTree;\n\t;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = binarySearch;\n\tfunction binarySearch(sortArr, key) {\n\t  var sortArrLen = sortArr.length;\n\t  var middleIndex = Math.floor(sortArrLen / 2);\n\t  var middleElem = sortArr[middleIndex];\n\t\n\t  if (middleElem === key) return true;else if (middleElem < key && sortArrLen > 1) {\n\t    var newArr = sortArr.splice(middleIndex, sortArrLen);\n\t\n\t    return binarySearch(newArr, key);\n\t  } else if (middleElem > key && sortArrLen > 1) {\n\t    var _newArr = sortArr.splice(0, middleIndex);\n\t\n\t    return binarySearch(_newArr, key);\n\t  } else {\n\t    return false;\n\t  }\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tfunction fibonacci(position) {\n\t  if (position < 3) return 1;else return fibonacci(position - 1) + fibonacci(position - 2);\n\t};\n\t\n\tfunction fibMemo(index) {\n\t  var cache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\t\n\t  if (cache[index]) return cache[index];else {\n\t    if (index < 3) return 1;else {\n\t      console.log(cache);\n\t      cache[index] = fibMemo(index - 1, cache) + fibMemo(index - 2, cache);\n\t    }\n\t  }\n\t  return cache[index];\n\t};\n\t\n\texports.fibonacci = fibonacci;\n\texports.fibMemo = fibMemo;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = factorial;\n\t/*\n\t  Make a function that computes a factorial recursively.\n\t  A factorial is when you take a number n and multiply by each preceding integer until you hit one.\n\t  n * (n-1) * (n-2) ... * 3 * 2 * 1\n\t  \n\t  Call the function factorial\n\t  \n\t  factorial(1) = 1\n\t  factorial(2) = 2\n\t  factorial(3) = 6 \n\t*/\n\t\n\tfunction factorial(n) {\n\t  if (n <= 1) return 1;\n\t  return n * factorial(n - 1);\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = largestBinaryGap;\n\tfunction largestBinaryGap(num) {\n\t  var bin = Math.abs(num).toString(2),\n\t      finalMax = 0,\n\t      currentMax;\n\t\n\t  for (var i = 0; i < bin.length; i++) {\n\t    currentMax = 0;\n\t    while (bin[i] === \"0\") {\n\t      ++currentMax && ++i;\n\t    }\n\t    if (bin[i] === '1') finalMax = Math.max(finalMax, currentMax);\n\t  }\n\t  return finalMax;\n\t}\n\tmodule.exports = exports['default'];\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** algorithms.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap af79045e96d8186a1a21\n **/","import { fizzbuzzAnswer } from './fizzbuzz';\nimport { ransomNoteAnswer } from './harmlessRansomNote';\nimport isPalindrome from './isPalindrome';\nimport caesarCipher from './caesarCipher';\nimport reverseWord from './reverseWord';\nimport reversedArrayInPlace from './reversedArrayInPlace';\nimport meanMedianMode from './meanMedianMode';\nimport twoSum from './twosum';\nimport BinarySearchTree from './binarySearchTree';\nimport binarySearch from './binarySearch';\nimport {fibonacci, fibMemo} from './fibonacci';\nimport factorial from './factorial';\nimport largestBinaryGap from './largestBinaryGap';\n\nlet est = new BinarySearchTree();\n\nest.add(55);\nest.add(67);\nest.add(10);\nest.add(29);\nest.add(40);\nest.add(5);\nest.add(16);\nest.add(25);\nest.add(2);\nest.add(1);\nest.add(3);\nconsole.log(est.size());\nconsole.log(est.contains(10));\nest.myconsole();\nest.remove(16);\nconsole.log(est.toArray());\nconsole.log(est.toArray().toString());\n\nwindow.onload = function () {\n  const fizzBuzzAnswer = document.getElementsByClassName('fizzBuzz-answer')[0];\n  const harmlessRansomNoteAnswer = document.getElementsByClassName('randomNote-answer')[0];\n  const ispalindromeBlock = document.getElementById('ispalindrome');\n  const caesarCipherBlock = document.getElementById('caesarCipher');\n  const reversedWordBlock = document.getElementById('reversedWord');\n  const reversedArrayInPlaceBlock = document.getElementById('reversedArrayInPlace');\n  const meanMedianModeBlock = document.getElementById('meanMedianMode');\n  const twoSumBlock = document.getElementById('twoSum');\n  const binarysearchBlock = document.getElementById('binarysearch');\n  const largestBinaryGapBlock = document.getElementById('largestBinaryGap');\n  const meanMedianModeArr = [32, 4, 2, 5, 44, 55, 55, 4, 1, 46];\n  const twoSumArr = [40, 11, 19, 17, -12];\n  const binarySearchArr = [1, 3, 5, 7, 9, 11, 45, 55, 65, 77, 89];\n  const binarySearchKey = 77;\n  const twoSumExpect = 28;\n  const twoSumResult = twoSum(twoSumArr, twoSumExpect).map((item) => {\n    return '[' + item.join(', ') + ']';\n  });\n  const meanMedianModeObj = meanMedianMode(meanMedianModeArr);\n  const {\n    origin,\n    reversed\n  } = reverseWord('this is test text for function');\n  const caesarCipherArr = [\n    caesarCipher('Zoo Keeper', 2),\n    caesarCipher('Big Car', -16),\n    caesarCipher('Javascript', -900)\n  ];\n\n  fizzBuzzAnswer.innerHTML = fizzbuzzAnswer;\n  harmlessRansomNoteAnswer.innerHTML = ransomNoteAnswer;\n  ispalindromeBlock.innerHTML = '<h2>IsPalindrome</h2>' + isPalindrome(\"Madam I'm Adam\");\n  caesarCipherBlock.innerHTML = '<h2>CaesarCipher</h2>' + caesarCipherArr.join('<br>');\n  reversedWordBlock.innerHTML = '<h2>Reverse Word</h2>' + origin + ':<br>' + reversed;\n  reversedArrayInPlaceBlock.innerHTML = '<h2>Reversed Array Place</h2>' + reversedArrayInPlace(['r', 4, 'a', true]).join(', ');\n  meanMedianModeBlock.innerHTML = '<h2>mean median and mode</h2>' + 'Array: [' + meanMedianModeArr.join(', ') + '] <br/>' +\n  'Mean: ' + meanMedianModeObj.Mean + '<br/>' +\n  'Median: ' + meanMedianModeObj.Median + '<br/>' +\n  'Mode: ' + meanMedianModeObj.Mode.join(', ');\n  twoSumBlock.innerHTML = '<h2>two sum</h2>' + 'Array: [' + twoSumArr.join(', ') + '] Expect sum:' + twoSumExpect +'<br/>' +\n  'result: [' + twoSumResult.join(', ') + ']';\n  twoSumBlock.innerHTML = '<h2>two sum</h2>' + 'Array: [' + twoSumArr.join(', ') + '] Expect sum:' + twoSumExpect +'<br/>' +\n  'result: [' + twoSumResult.join(', ') + ']';\n  binarysearchBlock.innerHTML = '<h2>binary search</h2>' + 'Array: [' + binarySearchArr.join(', ') + '] <br/>' +\n  'result: ' + binarySearch(binarySearchArr, binarySearchKey);\n  largestBinaryGapBlock.innerHTML = '<h2>largestBinaryGap</h2>' + 'num: 1028 <br/>'+\n  'result: ' + largestBinaryGap(1028);\n  console.log(fibonacci(12));\n  console.log(fibMemo(8));\n  console.log(factorial(10));\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/index.js\n **/","export default function fizzbuzz(num) {\n  if (!num) return console.warn('請輸入一個數字');\n  let infoArr = [];\n\n  for (let i = 1;i <= num; i++) {\n    if (i % 15 === 0) infoArr.push(`${i} - FizBuzz`);\n    else if (i % 3 === 0) infoArr.push(`${i} - Fizz`);\n    else if (i % 5 === 0) infoArr.push(`${i} - Buzz`);\n    else infoArr.push(`${i}`);\n  }\n  const infoString = infoArr.join('<br>');\n\n  return infoString;\n};\n\nexport const fizzbuzzAnswer = fizzbuzz(20) || '請輸入一個數字';\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/fizzbuzz.js\n **/","export default function harmlessRansomNote(noteTxt, magazineTxt) {\n  let compareObj = {};\n  let noteTxtArr = noteTxt.split(' ');\n  let MagazineTxtArr = magazineTxt.split(' ');\n  let noteIsPossible = true;\n\n  MagazineTxtArr.forEach(text => {\n    if (!compareObj[text]) compareObj[text] = 0;\n    compareObj[text]++;\n  });\n\n  noteTxtArr.forEach(text => {\n    if (compareObj[text]) {\n      compareObj[text]--;\n      if (compareObj[text] < 0) noteIsPossible = false;\n    }\n    else noteIsPossible = false;\n  });\n  return noteIsPossible;\n};\n\nexport const ransomNoteAnswer = harmlessRansomNote('this is this', 'this is the text of the note');\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/harmlessRansomNote.js\n **/","export default function isPalindrome(str) {\n  const lowerCaseStr = str.toLowerCase();\n  const validateStr = lowerCaseStr.replace(/[\\W_]+/g, '');\n  const reverseStr = validateStr.split('').reverse().join('');\n\n  return validateStr === reverseStr;\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/isPalindrome.js\n **/","export default function caesarCipher(str, num) {\n  num = num % 26;\n  let lowerCaseString = str.toLowerCase();\n  let alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('');\n  let newString = '';\n\n  for (let i = 0; i < lowerCaseString.length; i++) {\n    let currentText = lowerCaseString[i];\n    let currentIndex,\n      modifiedIndex;\n\n    if (/[\\W]/.test(currentText)) {\n      newString += currentText;\n      continue;\n    }\n    currentIndex = alphabet.indexOf(currentText);\n    modifiedIndex = currentIndex + num;\n    if (modifiedIndex > 25) modifiedIndex = modifiedIndex - 26;\n    if (modifiedIndex < 0) modifiedIndex = 26 + modifiedIndex;\n    if (str[i] === currentText.toUpperCase()) {\n      newString += alphabet[modifiedIndex].toUpperCase();\n    } else {\n      newString += alphabet[modifiedIndex];\n    }\n  }\n\n  return newString;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/caesarCipher.js\n **/","export default function reverseWord(str) {\n  let strArr = str.split('');\n  let reversedStrArr = [];\n\n  strArr.forEach(word => {\n    reversedStrArr.unshift(word);\n  });\n\n  return {\n    origin: str,\n    reversed: reversedStrArr.join('')\n  };\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/reverseWord.js\n **/","export default function reversedArrayInPlace(arr) {\n  for (let i = 0; i < arr.length / 2; i++) {\n    let temp = arr[i];\n\n    arr[i] = arr[arr.length - 1 - i];\n    arr[arr.length - 1 - i] = temp;\n  }\n  return arr;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/reversedArrayInPlace.js\n **/","function getMean(arr) {\n  const sum = arr.reduce((prev, next)=> {\n    return prev + next;\n  }, 0);\n\n  return sum / arr.length;\n}\n\nfunction getMedian(arr) {\n  const orderArr = arr.sort((a, b) => {\n    return a - b;\n  });\n\n  if (arr.length % 2 !== 0) {\n    const medainIndex = Math.floor(orderArr.length / 2);\n\n    return orderArr[medainIndex];\n  } else {\n    let mid1 = orderArr[orderArr.length / 2 - 1];\n    let mid2 = orderArr[orderArr.length / 2];\n\n    return (mid1 + mid2) / 2;\n  }\n\n}\n\nfunction getMode(arr) {\n  let ModeObj = {};\n  let maxFrequency = 0;\n  let modes = [];\n\n  arr.forEach((item) => {\n    if (!ModeObj[item]) ModeObj[item] = 0;\n    ModeObj[item] ++;\n  });\n\n  for (let num in ModeObj) {\n    if (ModeObj[num] > maxFrequency) {\n      modes = [ num ];\n      maxFrequency = ModeObj[num];\n    } else if (ModeObj[num] === maxFrequency) modes.push(num);\n    if (modes.length === Object.keys(ModeObj).length) modes = [];\n  }\n\n  return modes;\n};\n\nexport default function meanMedianMode(arr) {\n  return {\n    Mean: getMean(arr),\n    Median: getMedian(arr),\n    Mode: getMode(arr)\n  };\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/meanMedianMode.js\n **/","export default function twoSum(arr, sum) {\n  var pairs = [];\n  var hashtable = [];\n\n  for (let i = 0; i < arr.length; i++) {\n    let currentNum = arr[i];\n    let counterpart = sum - currentNum;\n\n    if (hashtable.indexOf(counterpart) !== -1) pairs.push([currentNum, counterpart]);\n    hashtable.push(currentNum);\n  }\n\n  return pairs;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/twosum.js\n **/","export default class BinarySearchTree {\n\n  constructor() {\n    this._root = null;\n  }\n  // 先序遍歷：遍歷順序是：根、左子樹、右子樹。\n  // 傳入的process 是一個必須節點內執行的function\n  traverse(process) {\n    // 用來recursive traverse每個節點的 helper function\n    function inOrder(node) {\n      if (node) {\n        if (node.left !== null) {\n          inOrder(node.left);\n        }\n\n        process.call(this, node);\n\n        if (node.right !== null) {\n          inOrder(node.right);\n        }\n      }\n    }\n\n    inOrder(this._root);\n  }\n\n  add(value) {\n    // 創造新的節點\n    let node = {\n        value: value,\n        left: null,\n        right: null\n      },\n      // 用來作為遍歷節點的當前節點\n      current;\n\n    if (this._root === null) {\n      this._root = node;\n    } else {\n      current = this._root;\n      while (true) {\n        // 如果傳入的value小於當前節點的值，往當前節點的左邊節點尋找\n        if (value < current.value) {\n          if (current.left === null) {\n            // 設定node為當前節點的左節點，並離開loop\n            current.left = node;\n            break;\n          } else {\n            // 設定當前節點的左節點為當前節點，並繼續進行loop\n            current = current.left;\n          }\n        } else if (value > current.value) {\n          // 如果傳入的value小於當前節點的值，往當前節點的左邊節點尋找\n          if (current.right === null) {\n            current.right = node;\n            break;\n          } else {\n            current = current.right;\n          }\n        } else {\n          // value = 當前節點的值，不增加節點並跳出loop\n          break;\n        }\n      }\n    }\n  }\n\n  remove(value) {\n    let found = false,\n      parent = null,\n      current = this._root,\n      childCount,\n      replacementParent,\n      replacement;\n\n    while (!found && current) {\n\n      if (value < current.value) {\n        parent = current;\n        current = current.left;\n      } else if (value > current.value) {\n        parent = current;\n        current = current.right;\n      } else {\n        found = true;\n      }\n    }\n\n    if (found) {\n      childCount = (current.left !== null ? 1 : 0) + (current.right !== null ? 1 : 0);\n      if (current === this._root) {\n        switch (childCount) {\n          case 0:\n            this._root = null;\n            break;\n          case 1:\n            this._root = current.right === null ? current.left : current.right;\n            break;\n          case 2:\n            replacement = this._root.left;\n            // 選出左分支最大的值\n            while (replacement.right !== null) {\n              replacementParent = replacement;\n              replacement = replacement.right;\n            }\n\n            if (replacementParent !== null) {\n\n              // 將左分支最大的值從原來的位置移除\n              replacementParent.right = replacement.left;\n\n              // 將左分支最大的值作為root node，\n              // 原root node的左右子節點設為新root node 左右子節\n              replacement.right = this._root.right;\n              replacement.left = this._root.left;\n            } else {\n              // 左分支因this._root.left沒有子節點而消失\n              replacement.right = this._root.right;\n            }\n\n            // 將replacement設為新root node\n            this._root = replacement;\n            break;\n          default:\n            break;\n        }\n      } else {\n        switch (childCount) {\n          case 0:\n            if (current.value < parent.value) {\n              parent.left = null;\n            } else {\n              parent.right = null;\n            };\n            break;\n          case 1:\n            if (current.value < parent.value) {\n              parent.left = (current.left === null ? current.right : current.left);\n            } else {\n              parent.right = (current.left === null ? current.right : current.left);\n            };\n            break;\n          case 2:\n            // 將current左子節點設為取代節點，current = replacementParent\n            replacement = current.left;\n            replacementParent = current;\n\n            // 選出左分支最大的值\n            while (replacement.right !== null) {\n              replacementParent = replacement;\n              replacement = replacement.right;\n            }\n\n            replacementParent.right = replacement.left;\n\n            replacement.right = current.right;\n            replacement.left = current.left;\n\n            if (current.value < parent.value) {\n              parent.left = replacement;\n            } else {\n              parent.right = replacement;\n            }\n            break;\n          default:\n            break;\n        }\n      }\n    }\n  }\n\n  // 給定一個value 若 這個value出現在二元樹中 return true，反之 return false\n  contains(value) {\n    let found = false,\n      current = this._root; // 每次while loop實都會被變更為當前node\n\n    // 當found不等於true，並有還有剩餘節點時繼續執行loop\n    while (!found && current) {\n\n      // 如果輸入值小於當前node的值，往當前node的left node尋找該值\n      if (value < current.value) {\n        current = current.left;\n        // 如果輸入值大於當前node的值，往當前node的right node尋找該值\n      } else if (value > current.value) {\n        current = current.right;\n        // 輸入值等於當前node的值，set found = true找到該節點\n      } else {\n        found = true;\n      }\n    }\n\n    return found;\n  }\n\n  size() {\n    let length = 0;\n\n    this.traverse(function (node) {\n      length++;\n    });\n\n    return length;\n  }\n\n  toArray() {\n    let result = [];\n\n    this.traverse(function (node) {\n      result.push(node.value);\n    });\n\n    return result;\n  }\n\n  toString() {\n    return this.toArray.toString();\n  }\n\n  myconsole() {\n    console.log(this._root);\n  }\n};\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/binarySearchTree.js\n **/","export default function binarySearch(sortArr, key) {\n  const sortArrLen = sortArr.length;\n  const middleIndex = Math.floor(sortArrLen / 2);\n  const middleElem = sortArr[middleIndex];\n\n  if (middleElem === key) return true;\n  else if (middleElem < key && sortArrLen > 1) {\n    const newArr = sortArr.splice(middleIndex, sortArrLen);\n\n    return binarySearch(newArr, key);\n  } else if (middleElem > key && sortArrLen > 1) {\n    const newArr = sortArr.splice(0, middleIndex);\n\n    return binarySearch(newArr, key);\n  } else {\n    return false;\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/binarySearch.js\n **/","function fibonacci(position) {\n  if (position < 3) return 1;\n  else return fibonacci(position - 1) + fibonacci(position - 2);\n};\n\nfunction fibMemo(index, cache = []) {\n  if (cache[index]) return cache[index];\n  else {\n    if (index < 3) return 1;\n    else {\n      console.log(cache);\n      cache[index] = fibMemo(index - 1, cache) + fibMemo(index - 2, cache);\n    }\n  }\n  return cache[index];\n};\n\nexport {\n  fibonacci,\n  fibMemo\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/fibonacci.js\n **/","/*\n  Make a function that computes a factorial recursively.\n  A factorial is when you take a number n and multiply by each preceding integer until you hit one.\n  n * (n-1) * (n-2) ... * 3 * 2 * 1\n  \n  Call the function factorial\n  \n  factorial(1) = 1\n  factorial(2) = 2\n  factorial(3) = 6 \n*/\n\nexport default function factorial(n) {\n  if (n <= 1) return 1;\n  return n * factorial(n - 1);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/factorial.js\n **/","export default function largestBinaryGap(num) {\n  var bin = Math.abs(num).toString(2),\n      finalMax = 0,\n      currentMax;\n\n  for (var i = 0; i < bin.length; i++) {\n    currentMax = 0;\n    while (bin[i] === \"0\") {\n      ++currentMax && ++i;\n    }\n    if (bin[i] === '1' ) finalMax = Math.max(finalMax, currentMax);\n  }\n  return finalMax;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/largestBinaryGap.js\n **/"],"sourceRoot":""}